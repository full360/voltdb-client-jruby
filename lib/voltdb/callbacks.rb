module Voltdb
  class ProcCallback
    include Java::OrgVoltdbClient::ClientResponse
    include Java::OrgVoltdbClient::ProcedureCallback

    def initialize(&block)
      @block = block
    end

    # Implementation of callback to be provided by client applications
    #
    # @param client_response [Java::OrgVoltdbClient::ClientResponse] response
    #   to the stored procedure invocation this callback is associated with
    # @raise exceptions from the caller method
    def client_callback(client_response)
      client_response.extend(ClientResponseUtils)
      @block.call(client_response)
    end
  end

  class BulkLoaderFailureCallback
    java_import "org.voltdb.client.VoltBulkLoader.BulkLoaderFailureCallBack"
    include Java::OrgVoltdbClient::ClientResponse
    include Java::OrgVoltdbClientVoltBulkLoader::BulkLoaderFailureCallBack

    def initialize(&block)
      @block = block
    end

    # Invoked by the VoltBulkLoader when a insertRow() fails
    #
    # @param row_handle parameter received in the insertRow()
    # @param field_list [Array] array of row objects that were processed
    # @param client_response [Java::OrgVoltdbClient::ClientResponse] response
    #   generated by VoltDB indicating the type of failure that occurred
    # @raise exceptions from the caller method
    def failure_callback(row_handle, field_list, client_response)
      client_response.extend(ClientResponseUtils)
      @block.call(row_handle, field_list.to_ary, client_response)
    end
  end

  class BulkLoaderSuccessCallback
    java_import "org.voltdb.client.VoltBulkLoader.BulkLoaderSuccessCallback"
    include Java::OrgVoltdbClient::ClientResponse
    include Java::OrgVoltdbClientVoltBulkLoader::BulkLoaderSuccessCallback

    def initialize(&block)
      @block = block
    end

    # Callback for successful row import.  Callers are reponsible for managing
    # their own exception reporting
    #
    # @param row_handle parameter received in the insertRow()
    # @param client_response [Java::OrgVoltdbClient::ClientResponse] response
    #   generated by VoltDB indicating success
    # @raise exceptions from the caller method
    def success(row_handle, client_response)
      client_response.extend(ClientResponseUtils)
      @block.call(row_handle, client_response)
    end
  end

  class AllPartitionProcCallback
    java_import Java::OrgVoltdbClient::ClientResponseWithPartitionKey
    include Java::OrgVoltdbClient::AllPartitionProcedureCallback

    def initialize(&block)
      @block = block
    end

    # Implementation of callback to be provided by client applications
    #
    # @param client_response_with_partition_key
    #   [Java::OrgVoltdbClient::AllPartitionProcedureCallback] responses for
    #   each partition to the stored procedure invocation this callback is
    #   associated with
    # @raise exceptions from the caller method
    def client_callback(client_response_with_partition_key)
      response = client_response_with_partition_key.map do |partition|
        partition.response.extend(ClientResponseUtils)
        partition
      end

      @block.call(response)
    end
  end
end
